
Comparator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  0000015e  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000028  00000000  00000000  0000018e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000174  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000f8  00000000  00000000  0000032a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000163  00000000  00000000  00000422  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000034  00000000  00000000  00000588  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000194  00000000  00000000  000005bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000018  00000000  00000000  00000750  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   8:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  10:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  14:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  18:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  1c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  20:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  24:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  28:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  2c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  30:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  34:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  38:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  3c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  40:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  44:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  48:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  4c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  50:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  54:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  58:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  5c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  60:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  64:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  68:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  6c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  70:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  74:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  78:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61
  88:	0e 94 75 00 	call	0xea	; 0xea <main>
  8c:	0c 94 83 00 	jmp	0x106	; 0x106 <_exit>

00000090 <__bad_interrupt>:
  90:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000094 <setup>:
		
    }
}
void setup(void)
{
	DDRD = 0b00010100;//PD2 PWM signal PD4 IR LED.
  94:	84 e1       	ldi	r24, 0x14	; 20
  96:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x00;
  98:	1b b8       	out	0x0b, r1	; 11
	DDRC = 0b10000000;
  9a:	80 e8       	ldi	r24, 0x80	; 128
  9c:	87 b9       	out	0x07, r24	; 7
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9e:	2f ef       	ldi	r18, 0xFF	; 255
  a0:	83 ed       	ldi	r24, 0xD3	; 211
  a2:	90 e3       	ldi	r25, 0x30	; 48
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	80 40       	sbci	r24, 0x00	; 0
  a8:	90 40       	sbci	r25, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <setup+0x10>
  ac:	00 c0       	rjmp	.+0      	; 0xae <setup+0x1a>
  ae:	00 00       	nop
	
	
	_delay_ms(1000);
	////Timer 1
	TCCR1A |= (1<<COM1A1)|(1<<WGM11); // Fast PWM clear on match set at top
  b0:	e0 e8       	ldi	r30, 0x80	; 128
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	82 68       	ori	r24, 0x82	; 130
  b8:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM13)|(1<<CS10)|(1<<WGM12);  // Fast PWM 16MHz
  ba:	e1 e8       	ldi	r30, 0x81	; 129
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	89 61       	ori	r24, 0x19	; 25
  c2:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A);
  c4:	ef e6       	ldi	r30, 0x6F	; 111
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	82 60       	ori	r24, 0x02	; 2
  cc:	80 83       	st	Z, r24
	
	ICR1 = 319;
  ce:	8f e3       	ldi	r24, 0x3F	; 63
  d0:	91 e0       	ldi	r25, 0x01	; 1
  d2:	90 93 87 00 	sts	0x0087, r25
  d6:	80 93 86 00 	sts	0x0086, r24
	OCR1A = 31; // 2us on 18us off.
  da:	8f e1       	ldi	r24, 0x1F	; 31
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	90 93 89 00 	sts	0x0089, r25
  e2:	80 93 88 00 	sts	0x0088, r24
	sei();
  e6:	78 94       	sei
  e8:	08 95       	ret

000000ea <main>:

 

int main(void)
{
	setup();
  ea:	0e 94 4a 00 	call	0x94	; 0x94 <setup>
		//if (bit_is_set(PIND,PIND6)) // REACH 100v
		//{	
			//ledOn;
		//
		//}
		ledOn;
  ee:	47 9a       	sbi	0x08, 7	; 8
  f0:	2f ef       	ldi	r18, 0xFF	; 255
  f2:	83 ed       	ldi	r24, 0xD3	; 211
  f4:	90 e3       	ldi	r25, 0x30	; 48
  f6:	21 50       	subi	r18, 0x01	; 1
  f8:	80 40       	sbci	r24, 0x00	; 0
  fa:	90 40       	sbci	r25, 0x00	; 0
  fc:	e1 f7       	brne	.-8      	; 0xf6 <main+0xc>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <main+0x16>
 100:	00 00       	nop
		_delay_ms(1000);
		ledOff;
 102:	47 98       	cbi	0x08, 7	; 8
 104:	f4 cf       	rjmp	.-24     	; 0xee <main+0x4>

00000106 <_exit>:
 106:	f8 94       	cli

00000108 <__stop_program>:
 108:	ff cf       	rjmp	.-2      	; 0x108 <__stop_program>
